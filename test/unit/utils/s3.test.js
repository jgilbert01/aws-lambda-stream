import 'mocha';
import { expect } from 'chai';
import sinon from 'sinon';
import _ from 'highland';

import {
  putObjectToS3, getObjectFromS3, listObjectsFromS3, pageObjectsFromS3, splitS3Object, toGetObjectRequest, toGetObjectRequest2,
} from '../../../src/utils/s3';

import Connector from '../../../src/connectors/s3';

describe('utils/s3.js', () => {
  afterEach(sinon.restore);

  it('should put object', (done) => {
    const stub = sinon.stub(Connector.prototype, 'putObject').resolves({});

    const uows = [{
      putRequest: {
        Body: JSON.stringify({ f1: 'v1' }),
        Key: 'k1',
      },
    }];

    _(uows)
      .through(putObjectToS3())
      .collect()
      .tap((collected) => {
        // console.log(JSON.stringify(collected, null, 2));

        expect(stub).to.have.been.calledWith({
          Body: JSON.stringify({ f1: 'v1' }),
          Key: 'k1',
        });

        expect(collected.length).to.equal(1);
        expect(collected[0]).to.deep.equal({
          putRequest: {
            Body: JSON.stringify({ f1: 'v1' }),
            Key: 'k1',
          },
          putResponse: {},
        });
      })
      .done(done);
  });

  it('should get object', (done) => {
    const stub = sinon.stub(Connector.prototype, 'getObject').resolves({
      Body: JSON.stringify({ f1: 'v1' }),
    });

    const uows = [{
      getRequest: {
        Key: 'k1',
      },
    }];

    _(uows)
      .through(getObjectFromS3())
      .collect()
      .tap((collected) => {
        // console.log(JSON.stringify(collected, null, 2));

        expect(stub).to.have.been.calledWith({
          Key: 'k1',
        });

        expect(collected.length).to.equal(1);
        expect(collected[0]).to.deep.equal({
          getRequest: {
            Key: 'k1',
          },
          getResponse: {
            Body: JSON.stringify({ f1: 'v1' }),
          },
        });
      })
      .done(done);
  });

  it('should get and split object', (done) => {
    sinon.stub(Connector.prototype, 'getObject').resolves(GET_RESPONSE);

    const uows = [{
      record: {
        s3: {
          bucket: {
            name: 'event-lake-s3-stg-bucket-1vdisrg5i6pxt',
          },
          object: {
            key: 'us-east-1/2020/04/22/19/event-lake-s3-stg-DeliveryStream-1A6OO953Z8EU4-1-2020-04-22-19-16-13-013a227d-d7fe-47e9-878a-97763ce279b7',
          },
        },
      },
    }];

    _(uows)
      .map(toGetObjectRequest)
      .through(getObjectFromS3())
      .flatMap(splitS3Object())
      .map((uow) => {
        const { detail, ...eb } = JSON.parse(uow.getResponse.line);
        return ({
          ...uow,
          record: {
            ...uow.record,
            eb,
          },
          event: detail,
        });
      })
      .collect()
      .tap((collected) => {
        // console.log(JSON.stringify(collected, null, 2));

        expect(collected.length).to.equal(3);

        // console.log(JSON.stringify(collected[0], null, 2));

        expect(collected[0].event.type).to.equal('thing-created');
      })
      .done(done);
  });

  it('should get from s3 sns', (done) => {
    const uows = [{
      record: {
        s3: {
          s3: {
            bucket: {
              name: 'b1',
            },
            object: {
              key: 'k1',
            },
          },
        },
      },
    }];

    _(uows)
      .map(toGetObjectRequest2)
      .collect()
      .tap((collected) => {
        // console.log(JSON.stringify(collected, null, 2));
        expect(collected.length).to.equal(1);
        expect(collected[0].getRequest).to.deep.equal({
          Bucket: 'b1',
          Key: 'k1',
        });
      })
      .done(done);
  });

  it('should list objects', (done) => {
    const stub = sinon.stub(Connector.prototype, 'listObjects').resolves({
      IsTruncated: false,
      NextContinuationToken: '',
      Contents: [
        {
          Key: 'p1/2021/03/26/19/1234',
        },
      ],
    });

    const uows = [{
      listRequest: {
        Prefix: 'p1',
      },
    }];

    _(uows)
      .through(listObjectsFromS3())
      .collect()
      .tap((collected) => {
        // console.log(JSON.stringify(collected, null, 2));

        expect(stub).to.have.been.calledWith({
          Prefix: 'p1',
        });

        expect(collected.length).to.equal(1);
        expect(collected[0]).to.deep.equal({
          listRequest: {
            Prefix: 'p1',
          },
          listResponse: {
            IsTruncated: false,
            NextContinuationToken: '',
            Contents: [
              {
                Key: 'p1/2021/03/26/19/1234',
              },
            ],
          },
        });
      })
      .done(done);
  });

  it('should page objects', (done) => {
    const responses = [
      {
        IsTruncated: true,
        NextContinuationToken: 'm1',
        Contents: [
          {
            Key: 'p1/2021/03/26/19/1234',
          },
          {
            Key: 'p1/2021/03/26/19/5678',
          },
        ],
      },
      {
        IsTruncated: false,
        NextContinuationToken: undefined,
        Contents: [
          {
            Key: 'p1/2021/03/26/19/9012',
          },
        ],
      },
    ];

    const stub = sinon.stub(Connector.prototype, 'listObjects')
      .callsFake(() => Promise.resolve((responses.shift())));

    const uows = [{
      listRequest: {
        Prefix: 'p1',
      },
    }];

    _(uows)
      .through(pageObjectsFromS3())
      .collect()
      .tap((collected) => {
        // console.log(JSON.stringify(collected, null, 2));

        expect(stub).to.have.been.calledWith({
          Prefix: 'p1',
          ContinuationToken: undefined,
        });
        expect(stub).to.have.been.calledWith({
          Prefix: 'p1',
          ContinuationToken: 'm1',
        });

        expect(collected.length).to.equal(3);
        expect(collected[0]).to.deep.equal({
          listRequest: {
            Prefix: 'p1',
            ContinuationToken: undefined,
          },
          listResponse: {
            IsTruncated: true,
            NextContinuationToken: 'm1',
            Content: {
              Key: 'p1/2021/03/26/19/1234',
            },
          },
        });
        expect(collected[1]).to.deep.equal({
          listRequest: {
            Prefix: 'p1',
            ContinuationToken: undefined,
          },
          listResponse: {
            IsTruncated: true,
            NextContinuationToken: 'm1',
            Content: {
              Key: 'p1/2021/03/26/19/5678',
            },
          },
        });
        expect(collected[2]).to.deep.equal({
          listRequest: {
            Prefix: 'p1',
            ContinuationToken: 'm1',
          },
          listResponse: {
            IsTruncated: false,
            NextContinuationToken: undefined,
            Content: {
              Key: 'p1/2021/03/26/19/9012',
            },
          },
        });
      })
      .done(done);
  });
});


const GET_RESPONSE = {
  AcceptRanges: 'bytes',
  LastModified: '2020-04-22T19:17:15.000Z',
  ContentLength: 1271,
  ETag: '"a192b6e6886f117cd4fa64168f6ec378"',
  VersionId: 'CA84swti4u025H4XY5SLn.Qw4OgIo_9z',
  ContentType: 'application/octet-stream',
  ServerSideEncryption: 'AES256',
  Metadata: {},
  Body: {
    type: 'Buffer',
    data: [
      123,
      34,
      118,
      101,
      114,
      115,
      105,
      111,
      110,
      34,
      58,
      34,
      48,
      34,
      44,
      34,
      105,
      100,
      34,
      58,
      34,
      100,
      100,
      100,
      98,
      54,
      57,
      54,
      54,
      45,
      100,
      50,
      101,
      100,
      45,
      52,
      55,
      97,
      49,
      45,
      53,
      48,
      98,
      52,
      45,
      57,
      97,
      102,
      101,
      99,
      98,
      48,
      99,
      49,
      55,
      53,
      53,
      34,
      44,
      34,
      100,
      101,
      116,
      97,
      105,
      108,
      45,
      116,
      121,
      112,
      101,
      34,
      58,
      34,
      116,
      104,
      105,
      110,
      103,
      45,
      99,
      114,
      101,
      97,
      116,
      101,
      100,
      34,
      44,
      34,
      115,
      111,
      117,
      114,
      99,
      101,
      34,
      58,
      34,
      99,
      117,
      115,
      116,
      111,
      109,
      34,
      44,
      34,
      97,
      99,
      99,
      111,
      117,
      110,
      116,
      34,
      58,
      34,
      48,
      50,
      54,
      50,
      53,
      55,
      49,
      51,
      55,
      49,
      51,
      57,
      34,
      44,
      34,
      116,
      105,
      109,
      101,
      34,
      58,
      34,
      50,
      48,
      50,
      48,
      45,
      48,
      52,
      45,
      50,
      50,
      84,
      49,
      57,
      58,
      49,
      54,
      58,
      49,
      51,
      90,
      34,
      44,
      34,
      114,
      101,
      103,
      105,
      111,
      110,
      34,
      58,
      34,
      117,
      115,
      45,
      101,
      97,
      115,
      116,
      45,
      49,
      34,
      44,
      34,
      114,
      101,
      115,
      111,
      117,
      114,
      99,
      101,
      115,
      34,
      58,
      91,
      93,
      44,
      34,
      100,
      101,
      116,
      97,
      105,
      108,
      34,
      58,
      123,
      34,
      105,
      100,
      34,
      58,
      34,
      98,
      98,
      52,
      102,
      99,
      50,
      51,
      48,
      45,
      56,
      52,
      99,
      100,
      45,
      49,
      49,
      101,
      97,
      45,
      57,
      54,
      100,
      48,
      45,
      54,
      102,
      102,
      51,
      102,
      53,
      57,
      49,
      100,
      50,
      53,
      49,
      34,
      44,
      34,
      112,
      97,
      114,
      116,
      105,
      116,
      105,
      111,
      110,
      75,
      101,
      121,
      34,
      58,
      34,
      100,
      56,
      98,
      52,
      52,
      52,
      101,
      97,
      45,
      99,
      102,
      50,
      99,
      45,
      52,
      100,
      54,
      54,
      45,
      57,
      102,
      50,
      53,
      45,
      54,
      48,
      97,
      99,
      55,
      101,
      98,
      99,
      56,
      49,
      57,
      100,
      34,
      44,
      34,
      116,
      105,
      109,
      101,
      115,
      116,
      97,
      109,
      112,
      34,
      58,
      49,
      53,
      56,
      55,
      53,
      56,
      50,
      57,
      55,
      51,
      51,
      57,
      53,
      44,
      34,
      116,
      97,
      103,
      115,
      34,
      58,
      123,
      34,
      114,
      101,
      103,
      105,
      111,
      110,
      34,
      58,
      34,
      117,
      115,
      45,
      101,
      97,
      115,
      116,
      45,
      49,
      34,
      44,
      34,
      102,
      117,
      110,
      99,
      116,
      105,
      111,
      110,
      110,
      97,
      109,
      101,
      34,
      58,
      34,
      101,
      118,
      101,
      110,
      116,
      45,
      108,
      111,
      103,
      103,
      101,
      114,
      45,
      115,
      116,
      103,
      45,
      112,
      117,
      98,
      108,
      105,
      115,
      104,
      34,
      125,
      44,
      34,
      116,
      121,
      112,
      101,
      34,
      58,
      34,
      116,
      104,
      105,
      110,
      103,
      45,
      99,
      114,
      101,
      97,
      116,
      101,
      100,
      34,
      125,
      125,
      10,
      123,
      34,
      118,
      101,
      114,
      115,
      105,
      111,
      110,
      34,
      58,
      34,
      48,
      34,
      44,
      34,
      105,
      100,
      34,
      58,
      34,
      97,
      57,
      50,
      49,
      49,
      97,
      98,
      50,
      45,
      48,
      56,
      51,
      50,
      45,
      49,
      97,
      50,
      57,
      45,
      50,
      52,
      56,
      50,
      45,
      100,
      54,
      50,
      97,
      102,
      53,
      51,
      57,
      48,
      49,
      53,
      52,
      34,
      44,
      34,
      100,
      101,
      116,
      97,
      105,
      108,
      45,
      116,
      121,
      112,
      101,
      34,
      58,
      34,
      116,
      104,
      105,
      110,
      103,
      45,
      99,
      114,
      101,
      97,
      116,
      101,
      100,
      34,
      44,
      34,
      115,
      111,
      117,
      114,
      99,
      101,
      34,
      58,
      34,
      99,
      117,
      115,
      116,
      111,
      109,
      34,
      44,
      34,
      97,
      99,
      99,
      111,
      117,
      110,
      116,
      34,
      58,
      34,
      48,
      50,
      54,
      50,
      53,
      55,
      49,
      51,
      55,
      49,
      51,
      57,
      34,
      44,
      34,
      116,
      105,
      109,
      101,
      34,
      58,
      34,
      50,
      48,
      50,
      48,
      45,
      48,
      52,
      45,
      50,
      50,
      84,
      49,
      57,
      58,
      49,
      54,
      58,
      50,
      54,
      90,
      34,
      44,
      34,
      114,
      101,
      103,
      105,
      111,
      110,
      34,
      58,
      34,
      117,
      115,
      45,
      101,
      97,
      115,
      116,
      45,
      49,
      34,
      44,
      34,
      114,
      101,
      115,
      111,
      117,
      114,
      99,
      101,
      115,
      34,
      58,
      91,
      93,
      44,
      34,
      100,
      101,
      116,
      97,
      105,
      108,
      34,
      58,
      123,
      34,
      105,
      100,
      34,
      58,
      34,
      99,
      51,
      49,
      57,
      48,
      51,
      97,
      48,
      45,
      56,
      52,
      99,
      100,
      45,
      49,
      49,
      101,
      97,
      45,
      57,
      54,
      100,
      48,
      45,
      54,
      102,
      102,
      51,
      102,
      53,
      57,
      49,
      100,
      50,
      53,
      49,
      34,
      44,
      34,
      112,
      97,
      114,
      116,
      105,
      116,
      105,
      111,
      110,
      75,
      101,
      121,
      34,
      58,
      34,
      98,
      52,
      101,
      52,
      102,
      97,
      57,
      51,
      45,
      100,
      100,
      100,
      98,
      45,
      52,
      50,
      53,
      51,
      45,
      98,
      48,
      53,
      98,
      45,
      52,
      53,
      57,
      49,
      98,
      48,
      97,
      97,
      97,
      97,
      102,
      57,
      34,
      44,
      34,
      116,
      105,
      109,
      101,
      115,
      116,
      97,
      109,
      112,
      34,
      58,
      49,
      53,
      56,
      55,
      53,
      56,
      50,
      57,
      56,
      54,
      52,
      53,
      56,
      44,
      34,
      116,
      97,
      103,
      115,
      34,
      58,
      123,
      34,
      114,
      101,
      103,
      105,
      111,
      110,
      34,
      58,
      34,
      117,
      115,
      45,
      101,
      97,
      115,
      116,
      45,
      49,
      34,
      44,
      34,
      102,
      117,
      110,
      99,
      116,
      105,
      111,
      110,
      110,
      97,
      109,
      101,
      34,
      58,
      34,
      101,
      118,
      101,
      110,
      116,
      45,
      108,
      111,
      103,
      103,
      101,
      114,
      45,
      115,
      116,
      103,
      45,
      112,
      117,
      98,
      108,
      105,
      115,
      104,
      34,
      125,
      44,
      34,
      116,
      121,
      112,
      101,
      34,
      58,
      34,
      116,
      104,
      105,
      110,
      103,
      45,
      99,
      114,
      101,
      97,
      116,
      101,
      100,
      34,
      125,
      125,
      10,
      123,
      34,
      118,
      101,
      114,
      115,
      105,
      111,
      110,
      34,
      58,
      34,
      48,
      34,
      44,
      34,
      105,
      100,
      34,
      58,
      34,
      99,
      49,
      49,
      52,
      54,
      48,
      56,
      57,
      45,
      54,
      102,
      102,
      53,
      45,
      49,
      102,
      48,
      48,
      45,
      55,
      55,
      100,
      50,
      45,
      97,
      50,
      98,
      52,
      52,
      54,
      101,
      99,
      102,
      100,
      100,
      52,
      34,
      44,
      34,
      100,
      101,
      116,
      97,
      105,
      108,
      45,
      116,
      121,
      112,
      101,
      34,
      58,
      34,
      102,
      97,
      117,
      108,
      116,
      34,
      44,
      34,
      115,
      111,
      117,
      114,
      99,
      101,
      34,
      58,
      34,
      99,
      117,
      115,
      116,
      111,
      109,
      34,
      44,
      34,
      97,
      99,
      99,
      111,
      117,
      110,
      116,
      34,
      58,
      34,
      48,
      50,
      54,
      50,
      53,
      55,
      49,
      51,
      55,
      49,
      51,
      57,
      34,
      44,
      34,
      116,
      105,
      109,
      101,
      34,
      58,
      34,
      50,
      48,
      50,
      48,
      45,
      48,
      52,
      45,
      50,
      50,
      84,
      49,
      57,
      58,
      49,
      54,
      58,
      52,
      54,
      90,
      34,
      44,
      34,
      114,
      101,
      103,
      105,
      111,
      110,
      34,
      58,
      34,
      117,
      115,
      45,
      101,
      97,
      115,
      116,
      45,
      49,
      34,
      44,
      34,
      114,
      101,
      115,
      111,
      117,
      114,
      99,
      101,
      115,
      34,
      58,
      91,
      93,
      44,
      34,
      100,
      101,
      116,
      97,
      105,
      108,
      34,
      58,
      123,
      34,
      105,
      100,
      34,
      58,
      34,
      99,
      101,
      101,
      100,
      57,
      52,
      50,
      48,
      45,
      56,
      52,
      99,
      100,
      45,
      49,
      49,
      101,
      97,
      45,
      57,
      54,
      100,
      48,
      45,
      54,
      102,
      102,
      51,
      102,
      53,
      57,
      49,
      100,
      50,
      53,
      49,
      34,
      44,
      34,
      112,
      97,
      114,
      116,
      105,
      116,
      105,
      111,
      110,
      75,
      101,
      121,
      34,
      58,
      34,
      50,
      100,
      97,
      101,
      102,
      52,
      99,
      54,
      45,
      49,
      51,
      101,
      49,
      45,
      52,
      55,
      52,
      57,
      45,
      57,
      57,
      57,
      99,
      45,
      99,
      102,
      99,
      57,
      53,
      56,
      56,
      53,
      49,
      57,
      97,
      50,
      34,
      44,
      34,
      116,
      105,
      109,
      101,
      115,
      116,
      97,
      109,
      112,
      34,
      58,
      49,
      53,
      56,
      55,
      53,
      56,
      51,
      48,
      48,
      54,
      51,
      48,
      55,
      44,
      34,
      116,
      97,
      103,
      115,
      34,
      58,
      123,
      34,
      114,
      101,
      103,
      105,
      111,
      110,
      34,
      58,
      34,
      117,
      115,
      45,
      101,
      97,
      115,
      116,
      45,
      49,
      34,
      44,
      34,
      102,
      117,
      110,
      99,
      116,
      105,
      111,
      110,
      110,
      97,
      109,
      101,
      34,
      58,
      34,
      101,
      118,
      101,
      110,
      116,
      45,
      108,
      111,
      103,
      103,
      101,
      114,
      45,
      115,
      116,
      103,
      45,
      112,
      117,
      98,
      108,
      105,
      115,
      104,
      34,
      125,
      44,
      34,
      116,
      121,
      112,
      101,
      34,
      58,
      34,
      102,
      97,
      117,
      108,
      116,
      34,
      125,
      125,
      10,
    ],
  },
};
