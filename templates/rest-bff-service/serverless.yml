service: my-rest-bff-service

provider:
  name: aws
  # cfnRole: arn:aws:iam::${self:custom.accounts.${opt:acct}.accountNumber}:role/cfnRole
  # deploymentBucket: myprefix-${opt:acct}-${opt:region}-serverlessdeploymentbucket
  runtime: nodejs12.x
  endpointType: REGIONAL
  environment:
    ACCOUNT_NAME: ${opt:acct}
    PROJECT: ${self:service}
    STAGE: ${opt:stage}
    DEBUG: ${self:custom.accounts.${opt:acct}.debug}
    ENTITY_TABLE_NAME: ${opt:stage}-${self:service}-entities
    ENTITY_DATA_INDEX: DataIndex
    # USER_POOL: ${cf:user-pool-${opt:stage}.userPoolArn}
    BUS_NAME: ${cf:event-hub-${opt:stage}.busName}
    BUS_ARN: ${cf:event-hub-${opt:stage}.busArn}
    STREAM_ARN: ${cf:event-hub-${opt:stage}.stream1Arn}
    # MASTER_KEY_ALIAS: ${cf:global-resources-${opt:stage}.MasterKeyAlias}
    # MASTER_KEY_ARN: ${cf:resources-${opt:stage}.MasterKeyArn}
    # KMS_REGIONS: us-east-1,us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt: [ EntitiesTable, Arn ]
    - Effect: Allow
      Action:
        - events:PutEvents
      Resource: ${self:provider.environment.BUS_ARN}
    # - Effect: Allow
    #   Action:
    #     - kms:GenerateDataKey
    #     - kms:Encrypt
    #     - kms:Decrypt
    #   Resource: ${self:provider.environment.MASTER_KEY_ARN}

package:
  individually: true

custom:
  webpack:
    includeModules: true
  accounts:
    dev:
      # accountNumber: 123456789012
      debug: '*'
    prod:
      # accountNumber: 123456789012
      debug: ''
  # autoscaling:
  #   - table: EntitiesTable
  #     global: true
  # dns:
  #   hostedZoneId: ZZZZZZZZZZZZZZ
  #   domainName: ${self:service}.example.com
  #   regionalDomainName: ${opt:stage}-${self:custom.dns.domainName}
  #   us-east-1:
  #     acmCertificateArn: arn:aws:acm:us-east-1:111111111111:certificate/55555555-5555-5555-5555-5555555555555555
  #     # healthCheckId: 44444444-4444-4444-4444-444444444444
  #   us-west-2:
  #     acmCertificateArn: arn:aws:acm:us-west-2:111111111111:certificate/55555555-5555-5555-5555-5555555555555555
  #     # healthCheckId: 33333333-3333-3333-3333-333333333333
  # cdn:
  #   region: us-east-1
  #   aliases:
  #     - ${self:custom.dns.domainName}
  #   # headers:
  #   priceClass: PriceClass_100
  #   acmCertificateArn: ${self:custom.dns.us-east-1.acmCertificateArn}
  #   logging:
  #     bucket: example-auditing.s3.amazonaws.com
  #     prefix: aws-cloudfront/api/${opt:stage}/${self:service}
  #   # webACLId:

plugins:
  # - serverless-multi-regional-plugin
  # - serverless-dynamodb-autoscaling-plugin
  # - serverless-dynamodb-global-table-plugin
  - serverless-webpack
  - baton-vcr-serverless-plugin
  - serverless-offline

functions:
  rest:
    handler: src/rest/index.handle
    events:
      - http:
          path: v1/{proxy+}
          method: any
          cors: true
          # authorizer:
          #   arn: ${self:provider.environment.USER_POOL}
  listener:
    handler: src/listener/index.handle
    events:
      - stream:
          type: kinesis
          arn: ${self:provider.environment.STREAM_ARN}
          batchSize: 100
          startingPosition: TRIM_HORIZON
  trigger:
    handler: src/trigger/index.handle
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [ EntitiesTable, StreamArn ]
          batchSize: 100
          startingPosition: TRIM_HORIZON

resources:
  Resources:
    EntitiesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ENTITY_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: data
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: DataIndex
            KeySchema:
              - AttributeName: data
                KeyType: HASH
              - AttributeName: pk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
