replication:
  bucketArn: arn:${self:custom.partition}:s3:::${self:custom.org}-${self:service}-${opt:stage}-${self:custom.replication.region.${opt:region}}
  roleName: ${self:service}-${opt:stage}-${opt:region}-replicate
  region:
    us-east-1: us-west-2
    us-west-2: us-east-1

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:custom.org}-${self:service}-${opt:stage}-${opt:region}
        AccessControl: Private
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: AES256
        VersioningConfiguration:
          Status: Enabled

        # ReplicationConfiguration:
        #   Role: !Sub 'arn:${AWS::Partition}:iam::${aws:accountId}:role/${self:custom.replication.roleName}'
        #   Rules:
        #     - Destination:
        #         Bucket: ${self:custom.replication.bucketArn}
        #       Status: Enabled
        #       Prefix: ''

    BucketReplicationRole:
      DependsOn: Bucket
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:custom.replication.roleName}
        PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${aws:accountId}:policy/${self:custom.subsys}-ServerlessRuntimeBoundary-${opt:stage}'
        AssumeRolePolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - s3.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: replicate
            PolicyDocument:
              Statement:
                - Effect: Allow
                  Action:
                    - s3:GetReplicationConfiguration
                    - s3:ListBucket
                  Resource:
                    Fn::GetAtt: [ Bucket, Arn ]
                - Effect: Allow
                  Action:
                    - s3:GetObjectVersion
                    - s3:GetObjectVersionAcl
                  Resource:
                    - Fn::Join:
                      - ''
                      - - Fn::GetAtt: [ Bucket, Arn ]
                        - '*'
                - Effect: Allow
                  Action:
                    - s3:ReplicateObject
                    - s3:ReplicateDelete
                    - s3:ObjectOwnerOverrideToBucketOwner
                  Resource: ${self:custom.replication.bucketArn}/*

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Bucket
        PolicyDocument:
          Statement:
            - Effect: Allow
              Principal:
                AWS: !Sub 'arn:${AWS::Partition}:iam::${aws:accountId}:root'
              Action:
                - s3:ReplicateDelete
                - s3:ReplicateObject
                - s3:ObjectOwnerOverrideToBucketOwner
              Resource:
                - Fn::Join:
                  - ''
                  - - Fn::GetAtt: [ Bucket, Arn ]
                    - '/*'

  Outputs:
    BucketName:
      Value:
        Ref: Bucket
    BucketArn:
      Value:
        Fn::GetAtt: [ Bucket, Arn ]
