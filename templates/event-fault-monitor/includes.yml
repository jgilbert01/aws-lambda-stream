Topic:
  Type: AWS::SNS::Topic
  Properties:
    TopicName: ${self:service}-${opt:stage}-bucket-topic

TopicPolicy:
  Type: AWS::SNS::TopicPolicy
  Properties:
    PolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: s3.amazonaws.com
          Action:
            - SNS:Publish
          Resource:
            Ref: Topic
          Condition:
            ArnLike:
              aws:SourceArn: arn:aws:s3:::${self:service}-${opt:stage}-bucket-*
    Topics:
      - Ref: Topic

NotificationConfiguration:
  TopicConfigurations:
    - Event: s3:ObjectCreated:Put
      Topic:
        Ref: Topic

Queue:
  Type: AWS::SQS::Queue
QueuePolicy:
  Type: AWS::SQS::QueuePolicy
  Properties:
    Queues:
      - Ref: Queue
    PolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: sns.amazonaws.com
          Action: sqs:SendMessage
          Resource:
            Fn::GetAtt: [ Queue, Arn ]
          Condition:
            ArnEquals:
              aws:SourceArn:
                Ref: Topic

Subscription:
  Type: AWS::SNS::Subscription
  Properties:
    Protocol: sqs
    Endpoint:
      Fn::GetAtt: [ Queue, Arn ]
    TopicArn:
      Ref: Topic

CloudWatchLoggingOptions: 
  Enabled: true
  LogGroupName:
    Ref: LogGroup
  LogStreamName:
    Ref: LogStream

LogGroup: 
  Type: AWS::Logs::LogGroup

LogStream: 
  Type: AWS::Logs::LogStream
  Properties: 
    LogGroupName:
      Ref: LogGroup
    LogStreamName: event-faults

EventBridgeRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sts:AssumeRole
    Policies:               
      - PolicyName: put
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - firehose:PutRecord
                - firehose:PutRecordBatch
              Resource:
                - Fn::GetAtt: [ DeliveryStream, Arn ]

DeliveryRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: firehose.amazonaws.com
          Action: sts:AssumeRole
    Policies:               
      - PolicyName: delivery
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:PutObject
              Resource:
                - Fn::GetAtt: [ Bucket, Arn ]
                - Fn::Join:
                    - /
                    - - Fn::GetAtt: [ Bucket, Arn ]
                      - '*'
            - Effect: Allow
              Action:
                - logs:PutLogEvents
              Resource:
                - Fn::GetAtt: [ LogGroup, Arn ]
