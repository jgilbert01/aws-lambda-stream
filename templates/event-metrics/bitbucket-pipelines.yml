image: node:8

pipelines:
  default:
    - step:
        name: CI
        trigger: automatic
        caches:
          - node
        script:
          - cp .npmrc-conf ~/.npmrc
          - npm install --unsafe-perm
          - export AWS_ACCESS_KEY_ID=$DEV_PRV_AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$DEV_PRV_AWS_SECRET_ACCESS_KEY
          - export AWS_ROLE=$DEV_PRV_AWS_ROLE
          - npm test
          - npm run test:int
  pull-requests:
    task/*:
      - step:
          name: CI - staging
          trigger: automatic
          script:
            - cp .npmrc-conf ~/.npmrc
            - npm install --unsafe-perm
            - export AWS_ACCESS_KEY_ID=$DEV_PRV_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$DEV_PRV_AWS_SECRET_ACCESS_KEY
            - export AWS_ROLE=$DEV_PRV_AWS_ROLE
            - npm test
            - npm run test:int
          artifacts:
            - node_modules/**
            - package-lock.json
      - step:
          name: CD - staging - west
          trigger: manual
          script:
            - cp .npmrc-conf ~/.npmrc
            - export AWS_ACCESS_KEY_ID=$DEV_PRV_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$DEV_PRV_AWS_SECRET_ACCESS_KEY
            - export AWS_ROLE=$DEV_PRV_AWS_ROLE
            - npm run dp:stg:w
          artifacts:
            - node_modules/**
            - package-lock.json
      - step:
          name: CD - staging - east
          trigger: manual
          script:
            - cp .npmrc-conf ~/.npmrc
            - export AWS_ACCESS_KEY_ID=$DEV_PRV_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$DEV_PRV_AWS_SECRET_ACCESS_KEY
            - export AWS_ROLE=$DEV_PRV_AWS_ROLE
            - npm run dp:stg:e
  branches:
    master:
      - step:
          name: CI - production
          trigger: automatic
          script:
            - cp .npmrc-conf ~/.npmrc
            - npm install --unsafe-perm
            - export AWS_ACCESS_KEY_ID=$DEV_PRV_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$DEV_PRV_AWS_SECRET_ACCESS_KEY
            - export AWS_ROLE=$DEV_PRV_AWS_ROLE
            - npm test
            - npm run test:int
          artifacts:
            - node_modules/**
            - package-lock.json
      - step:
          name: CD - production - west
          trigger: automatic
          script:
            - cp .npmrc-conf ~/.npmrc
            - export AWS_ACCESS_KEY_ID=$PRD_PRV_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$PRD_PRV_AWS_SECRET_ACCESS_KEY
            - export AWS_ROLE=$PRD_PRV_AWS_ROLE
            - npm run dp:prd:w
          artifacts:
            - node_modules/**
            - package-lock.json
      - step:
          name: CD - production - east
          trigger: manual
          script:
            - cp .npmrc-conf ~/.npmrc
            - export AWS_ACCESS_KEY_ID=$PRD_PRV_AWS_ACCESS_KEY_ID
            - export AWS_SECRET_ACCESS_KEY=$PRD_PRV_AWS_SECRET_ACCESS_KEY
            - export AWS_ROLE=$PRD_PRV_AWS_ROLE
            - npm run dp:prd:e
